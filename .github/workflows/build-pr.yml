name: 'Build Pull Request'

concurrency:
  group: ${{ github.workflow }}-${{ ( github.ref == 'refs/heads/main' ) && format('ci-main-{0}', github.sha) || format('ci-main-{0}', github.ref) }}
  cancel-in-progress: true

env:
  COMPOSE_BAKE: true
  BUILDX_NO_DEFAULT_ATTESTATIONS: true

on:
  pull_request:

jobs:
  build:
    name: 'Build images'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          lfs: true

      - name: 'Build Solr image'
        if: ${{ github.event.pull_request && contains(github.event.pull_request.changed_files, 'solr/') }}
        run: |
          SOLRVERSION=$(grep "FROM solr" -m1 solr/Dockerfile | cut -f2 -d":"| cut -f1 -d":")
          echo "Building Solr version $SOLRVERSION"
          docker buildx build --build-arg SOLRVERSION=${SOLRVERSION} --tag ghcr.io/tailormap/solr:${SOLRVERSION} --tag ghcr.io/tailormap/solr:snapshot --pull ./solr

      - name: 'Build tailormap-data images'
        if: ${{ github.event.pull_request && ( contains(github.event.pull_request.changed_files, 'docker-compose.yml') || contains(github.event.pull_request.changed_files, 'oracle/') || contains(github.event.pull_request.changed_files, 'postgis/') || contains(github.event.pull_request.changed_files, 'sqlserver/') ) }}
        run: docker compose -f ./docker-compose.yml build --pull --parallel --compress --no-cache

      - name: 'Start tailormap-data database images'
        if: ${{ steps.build-tailormap-data-images.conclusion == 'success' }}
        run: |
          docker compose -f ./docker-compose.yml -f ./no-traefik.yml up -d postgis oracle sqlserver --wait
          printf "\nPostGIS logs:\n"
          docker logs postgis
          printf "\nOracle logs:\n"
          docker logs oracle
          printf "\nSQL Server logs:\n"
          docker logs sqlserver
        

